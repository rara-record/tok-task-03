import { ContentType, HttpClient, RequestParams } from '../@http-client'
import {
  CredentialDtoType,
  ProfileDtoType,
  RefreshDtoType,
  SignInDtoType,
  SignUpDtoType,
  SocialLoginDtoType,
  UpdateProfileDtoType,
  UserEntityType,
} from '../@types/data-contracts'
import { DeepOmitReadOnly } from '../@types/util-types'

/**
 * !DO NOT EDIT THIS FILE
 *
 * 스크립트가 실행될때, 파일을 항상 새로 쓰기 때문에 파일 수정시 작성내용이 제거 될 수 있습니다.
 */

export class AuthApi<
  SecurityDataType = unknown,
> extends HttpClient<SecurityDataType> {
  /**
   * No description
   *
   * @tags auth
   * @name AuthControllerSignup
   * @request POST:/auth/singup
   */
  authControllerSignup = (variables: {
    data: DeepOmitReadOnly<SignUpDtoType>
    params?: RequestParams
  }) =>
    this.request<UserEntityType, any>({
      path: `/auth/singup`,
      method: 'POST',
      body: variables.data,
      type: ContentType.Json,
      format: 'json',
      ...variables.params,
    })

  /**
   * No description
   *
   * @tags auth
   * @name AuthControllerSignIn
   * @request POST:/auth/login
   */
  authControllerSignIn = (variables: {
    data: DeepOmitReadOnly<SignInDtoType>
    params?: RequestParams
  }) =>
    this.request<CredentialDtoType, any>({
      path: `/auth/login`,
      method: 'POST',
      body: variables.data,
      type: ContentType.Json,
      format: 'json',
      ...variables.params,
    })

  /**
   * No description
   *
   * @tags auth
   * @name AuthControllerSocialLogin
   * @request POST:/auth/social-login
   */
  authControllerSocialLogin = (variables: {
    data: DeepOmitReadOnly<SocialLoginDtoType>
    params?: RequestParams
  }) =>
    this.request<CredentialDtoType, any>({
      path: `/auth/social-login`,
      method: 'POST',
      body: variables.data,
      type: ContentType.Json,
      format: 'json',
      ...variables.params,
    })

  /**
   * No description
   *
   * @tags auth
   * @name AuthControllerRefresh
   * @request POST:/auth/refresh
   */
  authControllerRefresh = (variables: {
    data: DeepOmitReadOnly<RefreshDtoType>
    params?: RequestParams
  }) =>
    this.request<CredentialDtoType, any>({
      path: `/auth/refresh`,
      method: 'POST',
      body: variables.data,
      type: ContentType.Json,
      format: 'json',
      ...variables.params,
    })

  /**
   * No description
   *
   * @tags auth
   * @name AuthControllerGetProfile
   * @request GET:/auth/profile
   * @secure
   */
  authControllerGetProfile = (variables?: { params?: RequestParams }) =>
    this.request<ProfileDtoType, any>({
      path: `/auth/profile`,
      method: 'GET',
      secure: true,
      format: 'json',
      ...variables?.params,
    })

  /**
   * No description
   *
   * @tags auth
   * @name AuthControllerUpdateProfile
   * @request PATCH:/auth/profile
   * @secure
   */
  authControllerUpdateProfile = (variables: {
    data: DeepOmitReadOnly<UpdateProfileDtoType>
    params?: RequestParams
  }) =>
    this.request<ProfileDtoType, any>({
      path: `/auth/profile`,
      method: 'PATCH',
      body: variables.data,
      secure: true,
      type: ContentType.Json,
      format: 'json',
      ...variables.params,
    })
}

//
